plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.futuradev.githubber"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {

        futuraDev {
            storeFile file('../githubber.keystore')
            storePassword "BK3tsvH12"
            keyAlias "githubber_alias"
            keyPassword "BK3tsvH12"
        }
    }

    flavorDimensions "payment", "mode"

    productFlavors {

        free {
            dimension "payment"
            applicationIdSuffix ".free"
            addManifestPlaceholders([
                    appLabel: "GitHubber"
            ])
        }

        paid {
            dimension "payment"
            applicationIdSuffix ".paid"
            addManifestPlaceholders([
                    appLabel: "GitHubber"
            ])
        }

        stage {
            dimension "mode"
            applicationIdSuffix ".stage"
            addManifestPlaceholders([
                    appname_prefix: "(stage)"
            ])
        }

        store {
            dimension "mode"
            applicationIdSuffix ""
            addManifestPlaceholders([
                    appname_prefix: ""
            ])
        }
    }

    buildTypes {
        debug {
            addManifestPlaceholders([extra_prefix: ""])
            debuggable true
            minifyEnabled false
        }

        release {
            addManifestPlaceholders([extra_prefix: ""])
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.futuraDev
        }
    }

    applicationVariants.all { variant ->
        def payment = variant.productFlavors.find { item -> item.dimension == "payment"}.name
        def mode = variant.productFlavors.find { item -> item.dimension == "mode"}.name
        def prefix = payment + "-" + mode

        if (mode == "stage") {
            variant.mergedFlavor.manifestPlaceholders.put("appname_prefix", "(" + prefix + ")")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    def lifecycle_version = "2.2.0"

    // Constraint layout
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0-alpha2'


    //  ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    //  LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    //  Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    //  Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    //  Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    //  Android Navigation Component
    def navigationVersion = '2.3.3'
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    //  Koin
    def koin_version = '2.0.1'
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"
    testImplementation "org.koin:koin-test:$koin_version"

    //  Room
    def room_version = '2.2.4'
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.7.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.2'

    //OkHttp
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.1'

    //  Stetho debugging bridge
    implementation 'com.facebook.stetho:stetho:1.5.1'

    //  RecyclerView
    implementation 'androidx.recyclerview:recyclerview:1.2.0-beta01'

    //  Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    // Worker
    implementation 'androidx.work:work-runtime:2.4.0'

}